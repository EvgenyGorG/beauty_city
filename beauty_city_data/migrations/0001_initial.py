# Generated by Django 5.2.3 on 2025-06-27 11:18

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название категории услуг')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True, verbose_name='телеграм id')),
                ('full_name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('phone_number', models.CharField(max_length=100, verbose_name='номер телефона')),
            ],
        ),
        migrations.CreateModel(
            name='Salon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='название салона')),
                ('open_time', models.TimeField(default=datetime.time(10, 0), verbose_name='время открытия')),
                ('close_time', models.TimeField(default=datetime.time(20, 0), verbose_name='время закрытия')),
            ],
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='имя мастера')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='masters', to='beauty_city_data.category', verbose_name='категория услуг')),
                ('salon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='masters', to='beauty_city_data.salon', verbose_name='салон')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='наименование услуги')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='цена')),
                ('duration', models.DurationField(verbose_name='длительность')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='beauty_city_data.category', verbose_name='категория услуг')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(verbose_name='время начала')),
                ('end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='время окончания')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='beauty_city_data.client', verbose_name='клиент')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='beauty_city_data.master', verbose_name='мастер')),
                ('salon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='beauty_city_data.salon', verbose_name='салон')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='beauty_city_data.service', verbose_name='услуга')),
            ],
        ),
    ]
